@model PagedList.IPagedList<MVC_Project_8th_Module.Models.Book>
@using PagedList.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<br />
<br />

<h2 class="text-center">Book List</h2>


@using (Html.BeginForm("Index", "Books", FormMethod.Get))
{
    <div class="input-group">
        <div class="col-md-4">
            @Html.TextBox("SearchString", ViewBag.CurrentFilter as string, new { @class = "form-control", @style = "max-width:100%", @placeholder = "Search Author here..." })
        </div>
        <div class="col-md-2">
            <button type="submit" class="btn btn-primary"><i class="fa fa-search"></i> Search</button>
        </div>
    </div>
}

<br />

<div class="container-fluid">

    <table class="table table-hover table-dark">
        <thead>
            <tr>
                <th>
                    @Html.ActionLink("Book Title", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    Author Name
                </th>
                <th>
                    ISBN
                </th>
                <th>
                    @Html.ActionLink("No Of Page", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    Image File
                </th>
                <th>
                    @Html.ActionLink("Department Name", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th>
                    Publisher Name
                </th>
                <th></th>
            </tr>
        </thead>


        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.BookTitle)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Author.AuthorName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ISBN)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NoOfPage)
                </td>
                <td>
                    <img src="@Url.Content(item.ImageUrl)" width="150" height="100" class="rounded" />
                </td>

                <td>
                    @Html.DisplayFor(modelItem => item.Department.DepartmentName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Publisher.PublisherName)
                </td>
                <td>

                    @if (User.Identity.IsAuthenticated)
                    {
                        if (User.IsInRole("Admin"))
                        {
                            <a href="@Url.Action("Create", "Books")" class="btn btn-secondary btn-sm mr-1"><i class="fa fa-plus"></i></a>
                            <a href="@Url.Action("Edit", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class="fa fa-edit"></i></a>
                            <a href="@Url.Action("Details", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class=" fa fa-bars"></i></a>
                            <a href="@Url.Action("Delete", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class=" fa fa-trash"></i></a>

                        }

                        if (User.IsInRole("Teacher"))
                        {
                            <a href="@Url.Action("Create", "Books")" class="btn btn-secondary btn-sm mr-1"><i class="fa fa-plus"></i></a>
                            <a href="@Url.Action("Edit", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class="fa fa-edit"></i></a>
                            <a href="@Url.Action("Details", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class=" fa fa-bars"></i></a>


                        }

                        if (User.IsInRole("Student"))
                        {

                            <a href="@Url.Action("Details", "Books", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"><i class=" fa fa-bars"></i></a>


                        }

                    }
                    else
                    {
                        <a href="@Url.Action("Login", "Account", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"> Read</a>
                        <a href="@Url.Action("Index", "Authors", new { id = item.BookID })" class="btn btn-secondary btn-lg mr-1"> Author</a>
                    }

                </td>
            </tr>
        }

    </table>

    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
</div>